// create the connection & command objects...
            using (var cnn = new SqlConnection(GetConnectionString()))
            {
                using (var cmd = new SqlCommand(functionName, cnn))
                {
                    try
                    {
                        //Use connection time out from application not the default 30 seconds
                        if (!defaultConnectionTimeout)
                            cmd.CommandTimeout = m_intCmdTimeout;

                        StringBuilder commandBuilder = new StringBuilder();
                        commandBuilder.Append("SELECT [");
                        commandBuilder.Append(schema);
                        commandBuilder.Append("].[");
                        commandBuilder.Append(functionName);
                        commandBuilder.Append("](");

                        // add all of the parameters to the command
                        if (parameters != null)
                        {
                            int currentParamIdx = 0;
                            cmd.Parameters.AddRange(parameters);

                            // Add the parameter list to the function call string
                            foreach (SqlParameter param in parameters)
                            {
                                commandBuilder.Append(param.ParameterName);
                                if (currentParamIdx < (int)parameters.GetUpperBound(0))
                                    commandBuilder.Append(", ");

                                currentParamIdx += 1;
                            }
                        }

                        commandBuilder.Append(")");

                        // open the connection
                        cnn.Open();

                        // execute the command
                        cmd.Connection = cnn;
                        cmd.CommandText = commandBuilder.ToString();
                        SqlDataReader reader = cmd.ExecuteReader(CommandBehavior.CloseConnection);

                        if (reader.Read())
                        {
                            return (T)reader[0];
                        }
                        else return default(T);

                    }
                    catch (Exception e)
                    {
                        throw e;
                    }
                    finally
                    {
                        CloseConnection(cnn);
                    }
                }
            }
        }