This is in a baseresult class
public static List<ExcelCell> ExcelHeader<T>()
{
	var header = new List<ExcelCell>();
	PropertyInfo[] properties = typeof(T).GetProperties();
	foreach (PropertyInfo property in properties)
	{
		header.Add(new ExcelCell { ExcelColumnType = ExcelColumnTypes.Header, Text = property.Name });
	}
	return header;
}

public List<ExcelCell> GetExcelRow<T>()
{
	var value = new List<ExcelCell>();
	PropertyInfo[] properties = typeof(T).GetProperties();
	foreach (PropertyInfo property in properties)
	{
		value.Add(new ExcelCell { ExcelColumnType = ExcelColumnTypes.Normal, Text = property.GetValue(this) });
	}
	return value;
}








This class is based on baseresult
public static void Export(string fileName, List<BucketResult> results)
{            
	var exportData = new List<List<ExcelCell>>();
	exportData.Add(ExcelHeader<BucketResult>());
	foreach (var result in results)
	{
		exportData.Add(result.GetExcelRow<BucketResult>());
	}
	var writer = new ExcelWriter(fileName, "Maverick Buckets");
	writer.WriteExcelRows(fileName, exportData);
}
