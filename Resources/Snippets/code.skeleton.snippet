using System.ComponentModel;

namespace NAMESPACE
{
	public class CLASS : INotifyPropertyChanged
	{
		#region Implement INotifyPropertyChanged
		public event PropertyChangedEventHandler PropertyChanged;
		protected void OnPropertyChanged(string propertyName)
		{
			PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
		}
		#endregion

		#region Fields
		private int payeeTypeID;
		private int producerID;
		private string name;
		#endregion

		#region Properties
		public int PayeeTypeID { get => payeeTypeID; set { payeeTypeID = value; OnPropertyChanged("PayeeTypeID"); } }
		public int ProducerID { get => producerID; set { producerID = value; OnPropertyChanged("ProducerID"); } }
		public string Name { get => name; set { name = value; OnPropertyChanged("Name"); } }
		#endregion

		private static CLASS FromReader(SqlDataReader reader)
		{
			var value = new CLASS();

			try
			{
				#region Data Assignment
				value.PayeeTypeID = (int)reader.GetValueOrDefault("PayeeTypeID", 0);
				value.ProducerID = (int)reader.GetValueOrDefault("ProducerID", 0);
				value.Name = (string)reader.GetValueOrDefault("Name", null);
				#endregion
			}
			catch { throw new Exception(); }

			return value;
		}

		private static SqlParameterList GetSaveParameters(CLASS incentiveDistribution)
		{
			var parameters = new SqlParameterList();
			parameters.Add("ProducerIncentivePaymentID", SqlDbType.Int, incentiveDistribution.ProducerIncentivePaymentID);
			parameters.Add("BatchID", SqlDbType.Int, incentiveDistribution.BatchID);
			parameters.Add("ContractNumber", SqlDbType.Int, incentiveDistribution.ContractNumber);
			parameters.Add("ContractDate", SqlDbType.Int, incentiveDistribution.ContractDate);
			parameters.Add("DealNumber", SqlDbType.Int, incentiveDistribution.DealNumber);
			parameters.Add("LastModifiedDate", SqlDbType.Int, incentiveDistribution.LastModifiedDate);
			parameters.Add("LastModifiedBy", SqlDbType.Int, incentiveDistribution.LastModifiedBy);
			return parameters;
		}

		private static CLASS Clone(CLASS original)
        {
			var clone = new CLASS();
			clone.ProducerIncentivePaymentID = original.ProducerIncentivePaymentID;
			clone.BatchID = original.BatchID;
			clone.ContractNumber = original.ContractNumber;
			return clone;
		}
	}
}