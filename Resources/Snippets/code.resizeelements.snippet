public MainWindow()
{
	InitializeComponent();
	AddCancelButtons();
	Loaded += MainWindow_Loaded;
}

private void AddCancelButtons()
{
	var cancels = Cancel.LoadCancels(ConnectionString).Take(100).ToList();
	for (int i = 0; i < cancels.Count(); i++)
	{
		var text = cancels[i].DisplayName();
		var viewCancelButton = new Button { Tag = cancels[i].ContractCancelID, Background = Brushes.White, Content = text, Margin = new Thickness(2), Padding = new Thickness(0), VerticalAlignment = VerticalAlignment.Top, VerticalContentAlignment = VerticalAlignment.Center, HorizontalAlignment = HorizontalAlignment.Left, HorizontalContentAlignment = HorizontalAlignment.Center, BorderBrush = Brushes.Black, BorderThickness = new Thickness(0.5) };
		uiCancelButtonWrapPanel.Children.Add(viewCancelButton);
	}
}

private Size MeasureString(string text, Control control)
{
	var formattedText = new FormattedText(
		text,
		CultureInfo.CurrentCulture,
		FlowDirection.LeftToRight,
		new Typeface(control.FontFamily, control.FontStyle, control.FontWeight, control.FontStretch),
		control.FontSize,
		Brushes.Black,
		new NumberSubstitution(), 
	1);

	return new Size(formattedText.Width, formattedText.Height);
}

private void MainWindow_Loaded(object sender, RoutedEventArgs e)
{
	var maxButtonSize = GetMaxButtonSize(uiCancelButtonWrapPanel.Children);
	ResizeAllButtons(uiCancelButtonWrapPanel.Children, maxButtonSize.Width);
	ReportSizes($"Window Loaded MAXBUTTONSIZE {maxButtonSize.Width}x{maxButtonSize.Height}");
}

private Size GetMaxButtonSize(UIElementCollection buttons)
{
	var maxWidth = 0d;
	var maxButton = new Button();
	foreach (var child in buttons)
	{
		if (child.GetType().Name.ToLower() != "button") { continue; }
		if (((Button)child).Content.GetType().Name.ToLower() != "string") { continue; }

		var button = (Button)child;
		var thisSize = MeasureString(button.Content.ToString(), button);
		if (thisSize.Width > maxWidth)
		{
			maxButton = button;
			maxWidth = thisSize.Width;
			Debug.WriteLine($"Text [{maxWidth}]  Button[{maxButton.Content}: {maxButton.ActualWidth}x{maxButton.ActualHeight}]");
		}
	}
	return maxButton.RenderSize;
}

private void ResizeAllButtons(UIElementCollection buttons, double maxWidth)
{
	var maxButton = new Button();
	foreach (var child in buttons)
	{
		if (child.GetType().Name.ToLower() != "button") { continue; }
		if (((Button)child).Content.GetType().Name.ToLower() != "string") { continue; }

		var button = (Button)child;
		button.Width = maxWidth;
	}
}